package index;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import com.formdev.flatlaf.FlatDarkLaf;
import java.awt.Component;
import java.awt.Font;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JOptionPane;

import org.json.JSONArray;
import org.json.JSONObject;

import java.io.FileWriter;
import java.io.FileReader;
import java.io.BufferedReader;
import java.io.File;
import javax.swing.JFileChooser;

import com.formdev.flatlaf.FlatLightLaf;

import java.awt.HeadlessException;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.charset.StandardCharsets;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Manuel Garcia Baceiredo
 * @version 1.0.20250609
 * 
 */
public class inicio extends javax.swing.JFrame {

    
    
    String rutaArchivo = "New_file.json";
    
    
    
    /**
     * Creates new form inicio
     */
    public inicio() {
        initComponents();
        
        
        jPanelContenedor.setLayout(new BoxLayout(jPanelContenedor, BoxLayout.Y_AXIS));
        jPanelContenedor.setAlignmentX(Component.LEFT_ALIGNMENT);
        jPanelContenedor.setAlignmentY(Component.TOP_ALIGNMENT); // Opcional
        
        //lanza 8 memorias vacias
        for (int i = 0; i < 7; i++) {
            jButtonAddActionPerformed(null); 
        }
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem2 = new javax.swing.JMenuItem();
        jButtonAdd = new javax.swing.JButton();
        jPanelContenedor = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem5 = new javax.swing.JMenuItem();

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SuperV");
        setLocation(new java.awt.Point(69, 69));
        setPreferredSize(new java.awt.Dimension(288, 360));

        jButtonAdd.setFont(new java.awt.Font("Arial Black", 1, 13)); // NOI18N
        jButtonAdd.setText("+");
        jButtonAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelContenedorLayout = new javax.swing.GroupLayout(jPanelContenedor);
        jPanelContenedor.setLayout(jPanelContenedorLayout);
        jPanelContenedorLayout.setHorizontalGroup(
            jPanelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelContenedorLayout.setVerticalGroup(
            jPanelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 234, Short.MAX_VALUE)
        );

        jLabel1.setForeground(new java.awt.Color(153, 153, 153));
        jLabel1.setText("SuperV #v.1.0.20250906");

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jLabel2.setText("Portapapeles");

        jMenuBar1.setToolTipText("");

        jMenu1.setText("Menu");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("üíæ Guardar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Guardar como...");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Abrir archivo...");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setText("Nuevo");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);
        jMenu1.add(jSeparator1);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_WINDOWS, 0));
        jMenuItem5.setText("Repo");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        // TODO add your handling code here:
        //**  add button **//
        
        // Crear el nuevo campo de texto 
JTextField nuevoCampo = new JTextField(20);

// Responsive
//nuevoCampo.setPreferredSize(new java.awt.Dimension(jPanelContenedor.getParent().getWidth(), 50));
nuevoCampo.setMaximumSize(new java.awt.Dimension(Integer.MAX_VALUE, 30));
//nuevoCampo.setMinimumSize(new java.awt.Dimension(450, 50)); // jPanelContenedor.getParent().getWidth()-90
nuevoCampo.setFont(new Font("Arial", Font.PLAIN, 20));

//  a tama√±o de letra mayor mas gordo el campo y menos inputs entran en pantalla



// Al hacer clic DERECHO en el campo, copia el texto si no est√° vac√≠o
// Al hacer clic IZQUIERDO en el campo, pega el texto si est√° vac√≠o
nuevoCampo.addMouseListener(new java.awt.event.MouseAdapter() {
    @Override
    public void mouseClicked(java.awt.event.MouseEvent evt) {
        // Clic izquierdo 
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1) {
            String texto = nuevoCampo.getText();
            if (!texto.isEmpty()) {
                java.awt.datatransfer.StringSelection seleccion = new java.awt.datatransfer.StringSelection(texto);
                java.awt.Toolkit.getDefaultToolkit().getSystemClipboard().setContents(seleccion, null);
            }
        }

        // Clic derecho 
        if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3) {
            if (nuevoCampo.getText().isEmpty()) {
                try {
                    java.awt.datatransfer.Clipboard clipboard = java.awt.Toolkit.getDefaultToolkit().getSystemClipboard();
                    String textoPegado = (String) clipboard.getData(java.awt.datatransfer.DataFlavor.stringFlavor);
                    nuevoCampo.setText(textoPegado);
                } catch (HeadlessException | UnsupportedFlavorException | IOException ex) {
                    //ex.printStackTrace();
                }
            }
        }
    }
});


// Bot√≥n DEL que vac√≠a el campo
JButton botonDel = new JButton("x");
/*
botonDel.setPreferredSize(new java.awt.Dimension(30, 30));
botonDel.setMaximumSize(new java.awt.Dimension(30, 30));
botonDel.setMinimumSize(new java.awt.Dimension(30, 30));
botonDel.setFont(new Font("Arial", Font.BOLD, 16));
*/
//botonDel.setBorder(new LineBorder(Color.RED, 2)); // Borde rojo de 2 p√≠xeles
        
botonDel.addActionListener((java.awt.event.ActionEvent e) -> {
    nuevoCampo.setText("");
});

// Panel que agrupa campo + bot√≥n
JPanel fila = new JPanel();
fila.setLayout(new BoxLayout(fila, BoxLayout.X_AXIS));
fila.add(nuevoCampo);
//fila.add(Box.createHorizontalStrut(10)); //aparecen flotando en el medio
//fila.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0)); // no hace falta
fila.add(botonDel);

// A√±adir al contenedor y refrescar la interfaz
jPanelContenedor.add(fila);
jPanelContenedor.revalidate();
jPanelContenedor.repaint();

        
        
        
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:

        String directorioActual = System.getProperty("user.dir");
        JFileChooser fileChooser = new JFileChooser(directorioActual);
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Archivos de texto (*.txt)", "txt"));
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Archivos JSON (*.json)", "json"));
        int resultado = fileChooser.showSaveDialog(null);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivoGuardar = fileChooser.getSelectedFile();
            //System.out.println("Guardar en: " + archivoGuardar.getAbsolutePath());
            
            // aqu√≠ puedes guardar en archivoGuardar
            //public void guardarCamposEnJSON(String rutaArchivo) {
             JSONArray jsonArray = new JSONArray();

            for (int i = 0; i < jPanelContenedor.getComponentCount(); i++) {
                JPanel fila = (JPanel) jPanelContenedor.getComponent(i);
                JTextField campo = (JTextField) fila.getComponent(0); // el primer componente es JTextField
                String texto = campo.getText();
                jsonArray.put(texto);
            }

            JSONObject json = new JSONObject();
            json.put("campos", jsonArray);

            try (FileWriter file = new FileWriter(archivoGuardar)) {
                file.write(json.toString(4));  // indentaci√≥n para legibilidad
                file.flush();
                
                
                //Actualizamos donde se guardan los cambios
                rutaArchivo = archivoGuardar.getAbsolutePath(); 
                
                JOptionPane.showMessageDialog(null, "Guardado con exito.\nRuta: "+rutaArchivo);
                
            } catch (Exception e) {
                //e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Fatal error.");
            }
            
        }

        
        
        
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        
        
        
        /** ESTO DEBERIA SABER EN QUE ARCHIVO ESTAMOS TRABAJANDO
         *  MEMORIZAR LA RUTA DEL ULTIMO FILE GUARDADO O CARGADO
         *  SINO QUE PIDA CREAR UNO NUEVO.
         **/
        
        
     
        
//public void guardarCamposEnJSON(String rutaArchivo) {

         JSONArray jsonArray = new JSONArray();

    for (int i = 0; i < jPanelContenedor.getComponentCount(); i++) {
        JPanel fila = (JPanel) jPanelContenedor.getComponent(i);
        JTextField campo = (JTextField) fila.getComponent(0); // el primer componente es JTextField
        String texto = campo.getText();
        jsonArray.put(texto);
    }

    JSONObject json = new JSONObject();
    json.put("campos", jsonArray);

    try (FileWriter file = new FileWriter(rutaArchivo)) {
        file.write(json.toString(4));  // indentaci√≥n para legibilidad
        file.flush();
        //JOptionPane.showMessageDialog(null, "Los cambios han sido guardados con exito.");
    } catch (Exception e) {
        //e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Fatal error.");
    }
        
        
        
        

     
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        
        //String rutaArchivo = "datos.json"; //Esto es el por defecto si se pulsa Cancelar en la carga, pero es una chapuza.
        
        String directorioActual = System.getProperty("user.dir");
        JFileChooser fileChooser = new JFileChooser(directorioActual);
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Archivos de texto (*.txt)", "txt"));
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Archivos JSON (*.json)", "json"));
        int resultado = fileChooser.showOpenDialog(null); // null = ventana padre, o pon tu JFrame

        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivoSeleccionado = fileChooser.getSelectedFile();
            //System.out.println("Archivo seleccionado: " + archivoSeleccionado.getAbsolutePath());
            //String rutaArchivo = archivoSeleccionado.getAbsolutePath();
            // aqu√≠ puedes usar archivoSeleccionado para abrir o leer
        
/***** 
 * ARREGLAR ESTO!!!!!
 * PONER EN UNA CLASE PARA NO TENER QUE REPETIRLO AQUI!!!
 * PROBLEMAS CON UTF8, SUSTITUIR CODIGO!!
plain: CODIGO MALO
BufferedReader reader = new BufferedReader(new FileReader(rutaArchivo));
* lo que tengo: new BufferedReader(new FileReader(archivoSeleccionado.getAbsolutePath()))
* 
utf8: CODIGO BUENO
BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(rutaArchivo), StandardCharsets.UTF_8));

 * 
 * here. *******************/
            //public void cargarCamposDesdeJSON(String rutaArchivo) {
            try (BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(archivoSeleccionado.getAbsolutePath()), StandardCharsets.UTF_8))) {
                StringBuilder sb = new StringBuilder();
                String linea;
                while ((linea = reader.readLine()) != null) {
                    sb.append(linea);
                }

                JSONObject json = new JSONObject(sb.toString());
                JSONArray jsonArray = json.getJSONArray("campos");

                // Primero, limpiar el panel para cargar los campos
                jPanelContenedor.removeAll();

                for (int i = 0; i < jsonArray.length(); i++) {
                    String texto = jsonArray.getString(i);

                    // Reutiliza tu c√≥digo para crear un nuevo campo
                    JTextField nuevoCampo = new JTextField(30);
                    nuevoCampo.setMaximumSize(new java.awt.Dimension(Integer.MAX_VALUE, 25));
                    nuevoCampo.setFont(new Font("Arial", Font.PLAIN, 20));
                    nuevoCampo.setText(texto);
                    nuevoCampo.setCaretPosition(0);
                    // Repite el c√≥digo para el listener de copiar/pegar y el bot√≥n 'x'
                    nuevoCampo.addMouseListener(new java.awt.event.MouseAdapter() {
                        @Override
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            if (evt.getButton() == java.awt.event.MouseEvent.BUTTON1) {
                                String t = nuevoCampo.getText();
                                if (!t.isEmpty()) {
                                    java.awt.datatransfer.StringSelection seleccion = new java.awt.datatransfer.StringSelection(t);
                                    java.awt.Toolkit.getDefaultToolkit().getSystemClipboard().setContents(seleccion, null);
                                }
                            }
                            if (evt.getButton() == java.awt.event.MouseEvent.BUTTON3) {
                                if (nuevoCampo.getText().isEmpty()) {
                                    try {
                                        java.awt.datatransfer.Clipboard clipboard = java.awt.Toolkit.getDefaultToolkit().getSystemClipboard();
                                        String textoPegado = (String) clipboard.getData(java.awt.datatransfer.DataFlavor.stringFlavor);
                                        nuevoCampo.setText(textoPegado);
                                    } catch (HeadlessException | UnsupportedFlavorException | IOException ex) {
                                        //ex.printStackTrace();
                                        System.err.println("Error ");
                                    }
                                }
                            }
                        }
                    });

                    JButton botonDel = new JButton("x");
                    /** SI APLICAMOS ESTILOS AQUI SOLO SE APLICAN AL CARGAR
                    botonDel.setPreferredSize(new java.awt.Dimension(60, 50));
                    botonDel.setMaximumSize(new java.awt.Dimension(60, 50));
                    botonDel.setMinimumSize(new java.awt.Dimension(60, 50));
                    botonDel.setFont(new Font("Arial", Font.BOLD, 16));
                    botonDel.setBorder(new LineBorder(Color.RED, 2)); 
                    **/
                    botonDel.addActionListener((java.awt.event.ActionEvent e) -> {
                        nuevoCampo.setText("");
                    });

                    JPanel fila = new JPanel();
                    fila.setLayout(new BoxLayout(fila, BoxLayout.X_AXIS));
                    fila.add(nuevoCampo);
                    //fila.add(Box.createHorizontalStrut(10));
                    fila.add(botonDel);

                    jPanelContenedor.add(fila);
                }
                jPanelContenedor.revalidate();
                jPanelContenedor.repaint();

                
                //Actualizamos donde se guardan los cambios
                rutaArchivo = archivoSeleccionado.getAbsolutePath();
                
            } catch (Exception e) {
               //e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Fatal error.");
            }        
     
    
            /**
         * ATENCION
         * ESTO DEBE IR EN DIFERENTE CLASES DE JAVA 
         * PARA QUE NO SEA UN MALDITO CAOS.
         **/
        }

        
       
        
    
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        
        
        JOptionPane.showMessageDialog(null, "SuperV ¬∑ https://github.com/ourenseko/superv\n- Left click to copy.\n- Right click to paste.\n\n (c) Manuel Garcia Baceiredo");
        
        
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        
        //Guarda
        int x = JOptionPane.showConfirmDialog(null, "Save changes?", "Confirm", JOptionPane.YES_NO_CANCEL_OPTION);
        switch (x) {
            case JOptionPane.YES_OPTION:
                //System.out.println("Changes saved\nDir: "+rutaArchivo);
                jMenuItem1ActionPerformed(evt);
                break;
            case JOptionPane.NO_OPTION:
                //System.out.println("Changes not saved.");
                
                //limpiamos esto para que no haya sobreescrituras en el anterior archivo
                rutaArchivo = "New_file.json";
                //Borra todo
                //public void vaciarTodosLosCampos() {
                for (Component comp : jPanelContenedor.getComponents()) {
                    if (comp instanceof JPanel) {
                        JPanel fila = (JPanel) comp;
                        for (Component subcomp : fila.getComponents()) {
                            if (subcomp instanceof JTextField) {
                                JTextField campo = (JTextField) subcomp;
                                campo.setText("");
                            }
                        }
                    }
                }   break;
        //System.out.println("Operation canceled.");
            case JOptionPane.CANCEL_OPTION:
            case JOptionPane.CLOSED_OPTION:
                break;
            default:
                break;
        }
        
        
        
        
        
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        */
        //</editor-fold>
        
        try {
            // Usar el tema FlatLaf claro
            javax.swing.UIManager.setLookAndFeel(new FlatLightLaf()); //FlatLightLaf √≥ FlatDarkLaf

        } catch (UnsupportedLookAndFeelException e) {
            System.err.println("Error @FlatLaf");
            
        }

        // Cargar tu ventana;  Con lambda (m√°s moderna y compacta)
        javax.swing.SwingUtilities.invokeLater(() -> {
            new inicio().setVisible(true);
        });
        
        
        
        /* Create and display the form */
        // Cargar tu ventana; Con clase an√≥nima (forma tradicional)por defecto en netbeans
        /*
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inicio().setVisible(true);
            }
        });
        */
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPanel jPanelContenedor;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
